name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: asia-south1
  REPOSITORY: us-image-registry
  GKE_CLUSTER: us-cluster
  GKE_ZONE: asia-south1-a
  DEPLOYMENT_NAME: us-aesthetic-frontend-deployment
  IMAGE: us-aesthetic-us-frontend

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GKE_SA_JSON }}'

    - uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GKE_PROJECT }}

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Build
      run: |-
        docker build \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest" .

    - name: Publish Docker Image to Artifact Registry
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:latest"

    - name: Deploy to GKE
      run: |-
        echo "Apply the Kubernetes configuration files"
        kubectl apply -f frontend_kube_deployment.yaml
        kubectl apply -f frontend_kube_app.yaml
        echo "Get status of the config applied"
        kubectl get service us-aesthetic-frontend-app
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        echo "Restart the deployment to apply the changes"
        kubectl rollout restart deployment $DEPLOYMENT_NAME
        kubectl rollout status deployment/$DEPLOYMENT_NAME
